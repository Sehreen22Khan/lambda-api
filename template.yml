AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CI/CD Pipeline for deploying a Flask-based API on Lambda behind API Gateway and CloudFront.

Parameters:
  GitHubRepositoryOwner:
    Type: String
    Description: GitHub repository owner (e.g., my-github-username)
  GitHubRepositoryName:
    Type: String
    Description: GitHub repository name (e.g., lambda-api)
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch to build from
  ApplicationName:
    Type: String
    Default: flask-lambda-api
    Description: Name of the Lambda and associated resources

Resources:

  ############################################
  # IAM Roles
  ############################################

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Path: "/"
      Policies:
        - PolicyName: CodePipelinePassCFNDeployRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt CloudFormationDeployRole.Arn
        - PolicyName: CodePipelineS3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucketLocation
                Resource: 
                  - !Sub "arn:aws:s3:::${ArtifactBucket}/*"
        - PolicyName: CodePipelineCodeBuildAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:BatchGetProjects
                  - codebuild:ListBuildsForProject
                Resource: !GetAtt CodeBuildProject.Arn

  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Path: "/"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Path: "/"
      Policies:
        - PolicyName: CodeBuildCloudWatchLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 
                  - arn:aws:logs:*:*:log-group:/aws/codebuild/*:* 
        - PolicyName: CodeBuildS3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucketLocation
                Resource: 
                  - !Sub "arn:aws:s3:::${ArtifactBucket}/*"

  ############################################
  # Artifacts (S3 Bucket for CodePipeline)
  ############################################

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled

  ############################################
  # CodeBuild Project
  ############################################

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ApplicationName}-build"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: PACKAGE_NAME
            Value: latest_build.zip
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactBucket
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

  ############################################
  # CodePipeline
  ############################################

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ApplicationName}-pipeline"
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubRepositoryOwner
                Repo: !Ref GitHubRepositoryName
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub "{{resolve:secretsmanager:github/personal-access-token:SecretString:github-token}}"
                PollForSourceChanges: "false"
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub "${ApplicationName}-changeset"
                StackName: !Ref "AWS::StackName"
                TemplatePath: BuildArtifact::packaged-template.yml
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationDeployRole.Arn
                ParameterOverrides: !Sub |
                  {
                    "ArtifactBucket": "${ArtifactBucketName}",
                    "ApplicationName": "${ApplicationName}"
                  }
              InputArtifacts:
                - Name: BuildArtifact
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub "${ApplicationName}-changeset"
                StackName: !Ref "AWS::StackName"
                RoleArn: !GetAtt CloudFormationDeployRole.Arn
              RunOrder: 2

Outputs:
  ArtifactBucketName:
    Description: "Name of the Artifact S3 bucket"
    Value: !Ref ArtifactBucket
    Export:
      Name: !Sub "${AWS::StackName}-ArtifactBucketName"

  ApplicationName:
    Description: "Name of the Application"
    Value: !Ref ApplicationName
    Export:
      Name: !Sub "${AWS::StackName}-ApplicationName"

  CodePipelineName:
    Description: "Name of the CodePipeline"
    Value: !Ref CodePipeline
    Export:
      Name: !Sub "${AWS::StackName}-CodePipelineName"
